<?xml version="1.0" encoding="utf-8"?>
<Wiki xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <method name="ONGOING - GLOBAL" description="The ONGOING - GLOBAL event attribute will affect all entities in the game environment.">
    <parameter name="Tutorial Video by WyomingMyst" />
  </method>
  <method name="ONGOING - EACH PLAYER" description="The ONGOING - EACH PLAYER event attribute will affect the specified players in the game environment.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER EARNED ELIMINATION" description="The PLAYER EARNED ELIMINATION event attribute will affect the specified players who successfully score an elimination in the game environment.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER DEALT FINAL BLOW" description="The PLAYER DEALT FINAL BLOW event attribute will affect the specified players who successfully dealt the lethal damage against another player in the game environment.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER DEALT DAMAGE" description="The PLAYER DEALT DAMAGE event attribute will affect the specified players who successfully dealt damage against another player in the game environment.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER TOOK DAMAGE" description="The PLAYER TOOK DAMAGE event attribute will affect the specified players who received damage in the game environment.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER DIED" description="The PLAYER DIED event attribute will affect the specified players who died in the game environment.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER DEALT HEALING" description="The PLAYER DEALT HEALING event attribute will affect the specified players who successfully healed a player in the game environment.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER RECEIVED HEALING" description="The PLAYER RECEIVED HEALING event attribute will affect the specified players who received health in the game environment.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER JOINED MATCH" description="The PLAYER JOINED MATCH event attribute will affect the specified players who have joined the match.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="PLAYER LEFT MATCH" description="The PLAYER LEFT MATCH event attribute will affect the specified players who have left the match.">
    <parameter name="Team&#xA;&#xA;ALL" description="This event will affect both teams.&#xA;TEAM 1 - This event will affect team 1 (blue/defense)&#xA;TEAM 2 - This event will affect team 2 (red/attack)" />
    <parameter name="Players&#xA;&#xA;ALL" description="This event will affect all players regardless of team, slot position, or hero selected.&#xA;SLOT # (0-11) -  This event affect the slot assignment of that specific player in the order of the Lobby (see diagram below)&#xA;{HERO NAME} - This event affects any players using the specified hero." />
  </method>
  <method name="ABORT" description="Stops execution of the action list." />
  <method name="ABORT IF" description="Stops execution of the action list if the action’s condition evaluates to true, if it does not, the execution continues with the next action.">
    <parameter name="Condition" description="Specifies whether the execution is stopped. Can use most Boolean based Value Syntax." />
  </method>
  <method name="ABORT IF CONDITION IS FALSE" description="Stops execution of the action list if at least one condition in the condition list is false. If all conditions are true, execution continues with the next action." />
  <method name="ABORT IF CONDITION IS TRUE" description="Stops execution of the action list if all conditions in the condition list is true. If any are false, execution continues with the next action." />
  <method name="ALLOW BUTTON" description="Undoes the effect of the disallow button action for one or more players.">
    <parameter name="Player" description="The player or players whose button is being reenabled. Can use most Player based Value Syntax." />
    <parameter name="Button" description="The logical button that is being reenabled." />
  </method>
  <method name="BIG MESSAGE" description="Displays a large message above the reticle that is visible to specific players.">
    <parameter name="Visible to" description="One or more players who will see the message. Can use most Value Syntax to select multiple players to specify." />
    <parameter name="Header" description="The message to be displayed. Can use most String based Value Syntax to specify." />
  </method>
  <method name="CHASE GLOBAL VARIABLE AT RATE" description="Gradually modifies the value of a global variable at a specific rate. (A global variable is a variable that belongs to the game itself.)">
    <parameter name="Variable" description="The variable the action will manipulate. Can use most Variable based Value Syntax." />
    <parameter name="Destination" description="The value that the global variable will eventually reach. The type of this value may be either a number or a vector, through the variable’s existing value must be of the same type before the chase begins. Can use most Number or Vector based Value Syntax to specify." />
    <parameter name="Rate" description="The amount of change that will happen to the variable’s value each second. Can use most Number based Value Syntax to specify." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continuously reevaluated. This action will keep asking for and using new values from reevaluated inputs. You can specify a Destination and Rate or nothing." />
  </method>
  <method name="CHASE GLOBAL VARIABLE OVER TIME" description="Gradually modifies the value of a global variable over time. (A global variable is a variable that belongs to the game itself.)">
    <parameter name="Variable" description="The variable the action will manipulate. Can use most Variable based Value Syntax." />
    <parameter name="Destination" description="The value that the global variable will eventually reach. The type of this value may be either a number or a vector, through the variable’s existing value must be of the same type before the chase begins. Can use most Number or Vector based Value Syntax to specify." />
    <parameter name="Duration" description="The amount of time, in seconds, over which the variable’s value will approach the destination. Can use most Number based Value Syntax to specify." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continuously reevaluated. This action will keep asking for and using new values from reevaluated inputs. You can specify a Destination and Duration or nothing." />
  </method>
  <method name="CHASE PLAYER VARIABLE AT RATE" description="Gradually modifies the value of a player variable at a specific rate. (A player variable is a variable that belongs to a specific player.)">
    <parameter name="Player" description="The player whose variable will gradually change. If multiple players are provided, each of their variables will change independently." />
    <parameter name="Variable" description="The variable the action will manipulate. Can use most Variable based Value Syntax." />
    <parameter name="Destination" description="The value that the player variable will eventually reach. The type of this value may be either a number or a vector, through the variable’s existing value must be of the same type before the chase begins. Can use most Number or Vector based Value Syntax to specify." />
    <parameter name="Rate" description="The amount of change that will happen to the variable’s value each second. Can use most Number based Value Syntax to specify." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continuously reevaluated. This action will keep asking for and using new values from reevaluated inputs. You can specify a Destination and Rate or nothing." />
  </method>
  <method name="CHASE PLAYER VARIABLE OVER TIME" description="Gradually modifies the value of a player variable over time. (A player variable is a variable that belongs to a specific player.)">
    <parameter name="Player" description="The player whose variable will gradually change. If multiple players are provided, each of their variables will change independently." />
    <parameter name="Variable" description="The variable the action will manipulate. Can use most Variable based Value Syntax." />
    <parameter name="Destination" description="The value that the player variable will eventually reach. The type of this value may be either a number or a vector, through the variable’s existing value must be of the same type before the chase begins. Can use most Number or Vector based Value Syntax to specify." />
    <parameter name="Duration" description="The amount of time, in seconds, over which the variable’s value will approach the destination. Can use most Number based Value Syntax to specify." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continuously reevaluated. This action will keep asking for and using new values from reevaluated inputs. You can specify a Destination and Duration or nothing." />
  </method>
  <method name="CLEAR STATUS" description="Clears a status that was applied from a set status action from one or more players.">
    <parameter name="Player" description="The player or players from whom the status will be removed. Can use most Player based Value Syntax." />
    <parameter name="Status" description="The Status to be removed from the player or players. Values include Hacked, Burning, Knocked Down, Asleep, Frozen, Unkillable, Invincible, Phased Out, Rooted, or Stunned." />
  </method>
  <method name="COMMUNICATE" description="Causes one or more players to use an emote, voice line, or other equipped communication.">
    <parameter name="Player" description="The player or players to perform the communication. Can use most Player based Value Syntax." />
    <parameter name="Type" description="The type of communication. Can use any equipped emote, equipped voice line, or any other communication effect." />
  </method>
  <method name="CREATE BEAM EFFECT" description="Creates an in-world beam effect entity. This effect entity will persist until destroyed, to obtain a reference to this entity, use the last created entity value. This action will fail if too many entities have been created.">
    <parameter name="Visible to" description="One or more players who will be able to see the effect. Can use most Value Syntax to select one or multiple players." />
    <parameter name="Beam Type" description="The type of the effect to be created.&#xA;&#xA;Good Beam&#xA;Bad Beam&#xA;Grapple Beam" />
    <parameter name="Start Position" description="The effect’s start position. If this value is a player, then the effect will move along with the player, otherwise, the value is interpreted as a position in the world. Can use most Player or Vector based Value Syntax." />
    <parameter name="End Position" description="The effect’s end position. If this value is a player, then the effect will move along with the player, otherwise, the value is interpreted as a position in the world. Can use most Player or Vector based Value Syntax." />
    <parameter name="Color" description="The color of the beam effect to be created. IF a particular team is chosen, the effect will either be red or blue, depending on whether the team is hostile to the viewer. Does not apply to sound effects." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continuously reevaluated, the effect will keep asking for and using new values from reevaluated inputs.&#xA;&#xA;Visible to, position, and radius&#xA;Position and radius&#xA;Visible to&#xA;None" />
  </method>
  <method name="CREATE DUMMY BOT" description="Adds a new bot to the specified slot on the specified team so long as the slot is available. This bot will only move, fire, or use abilities if executing Workshop actions.">
    <parameter name="Hero" description="The hero that the bot will be. If more than one hero is provided, one will be chosen at random." />
    <parameter name="Team" description="The team on which to create the bot. The “ALL” option only works in Free-For-All game modes, while the “TEAM” options only work in team-based game modes." />
    <parameter name="Slot" description="The player slot which will receive the bot (-1 for first available slot). Up to 6 bots may be added to each team, or 12 bots to the Free-For-All team, regardless of lobby settings." />
    <parameter name="Position" description="The initial position where the bot will appear." />
    <parameter name="Facing" description="The initial direction where the bot will face." />
  </method>
  <method name="CREATE EFFECT" description="Creates an in-world effect entity. This effect entity will persist until destroyed, to obtain a reference to this entity, use the last created entity value. This action will fail if too many entities have been created.">
    <parameter name="Visible to" description="One or more players who will be able to see the effect. Can use most Value Syntax to select one or multiple players." />
    <parameter name="Type" description="The type of the effect to be created.&#xA;&#xA;Sphere&#xA;Light Shaft&#xA;Orb&#xA;Ring&#xA;Cloud&#xA;Sparkles&#xA;Good Aura&#xA;Bad Aura&#xA;Energy Sound&#xA;Pick-Up Sound&#xA;Good Aura Sound&#xA;Bad Aura Sound&#xA;Sparkles Sound&#xA;Smoke Sound&#xA;Decal Sound&#xA;Beacon Sound" />
    <parameter name="Color" description="The color of the effect to be created. IF a particular team is chosen, the effect will either be red or blue, depending on whether the team is hostile to the viewer. Does not apply to sound effects." />
    <parameter name="Position" description="The effect’s position. If this value is a player, then the effect will move along with the player, otherwise, the value is interpreted as a position in the world. Can use most Player or Vector based Value Syntax." />
    <parameter name="Radius" description="The effect’s radius in meters. Sound effects have their volume affected instead." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continuously reevaluated, the effect will keep asking for and using new values from reevaluated inputs.&#xA;&#xA;Visible to, position, and scale&#xA;Position and scale&#xA;Visible to&#xA;None" />
  </method>
  <method name="CREATE HUD TEXT" description="Creates HUD text visible to specific players at specific location on the screen. This text will persist until destroyed. To obtain a reference to this text, use the last text ID value. This action will fail if too many text elements have been created.">
    <parameter name="Visible to" description="One or more players who will see the HUD text. Can use most Value Syntax to select one or multiple players." />
    <parameter name="Header" description="The header text to be displayed (can be blank). Can use most String based Value Syntax to populate." />
    <parameter name="Subheader" description="The subheader text to be displayed (can be blank). Can use most String based Value Syntax to populate." />
    <parameter name="Text" description="The body text to be displayed (can be blank). Can use most String based Value Syntax to populate." />
    <parameter name="Location" description="The location on the screen where text will appear. You can choose left, top, or right." />
    <parameter name="Sort Order" description="The Sort Order of the text relative to other text in the same location. Text with a higher sort order will come after text with a lower sort order. Can use most Number based Value Syntax." />
    <parameter name="Header Color" description="The color of the Header text to be created. If a particular team is chosen, the effect will either be red or blue." />
    <parameter name="Subheader Color" description="The color of the Subheader text to be created. If a particular team is chosen, the effect will either be red or blue." />
    <parameter name="Text Color" description="The color of the body text to be created. If a particular team is chosen, the effect will either be red or blue." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continuously reevaluated, the text will keep asking for and using new values from reevaluated inputs.&#xA;&#xA;Visible to and String&#xA;String&#xA;None" />
  </method>
  <method name="CREATE ICON" description="Creates an in-world entity. This icon entity will persist until destroyed. To obtain a reference to this entity, use the last created entity value. This action will fail if too many entities have been created.">
    <parameter name="Visible to" description="One or more players who will be able to see the icon. Can use most Value Syntax to select one or multiple players." />
    <parameter name="Position" description="The icon’s position. If this value is a player, then the icon will appear above the player’s head, otherwise, the value is interpreted as a position in the world. Can use most Player or Vector based Value Syntax." />
    <parameter name="Icon" description="The icon to be created.&#xA;&#xA;Arrow: Down&#xA;Arrow: Left&#xA;Arrow: Right&#xA;Arrow: Up&#xA;Asterisk&#xA;Bolt&#xA;Checkmark&#xA;Circle&#xA;Club&#xA;Diamond&#xA;Dizzy&#xA;Exclamation Mark&#xA;Eye&#xA;Fire&#xA;Flag&#xA;Halo&#xA;Happy&#xA;Heart&#xA;Moon&#xA;No&#xA;Plus&#xA;Poison&#xA;Poison 2&#xA;Question Mark&#xA;Radioactive&#xA;Recycle&#xA;Ring Thick&#xA;Ring Thin&#xA;Sad&#xA;Skull&#xA;Spade&#xA;Spiral&#xA;Stop&#xA;Trashcan&#xA;Warning&#xA;X" />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continously reevaluated, the icon will keep asking for and using new values from reevaluated inputs.&#xA;&#xA;Visible to and position&#xA;Position&#xA;Visible to&#xA;None" />
    <parameter name="Icon Color" description="The color of the icon to be created. IF a particular team is chosen, the icon will either be red or blue, depending on whether the team is hostile to the viewer." />
    <parameter name="Show when offscreen" description="Should this icon still appear even when it is behind you? Can use most Boolean based Value Syntax to specify." />
  </method>
  <method name="CREATE IN-WORLD TEXT" description="Creates in-world text visible to specific players at specific position in the world. This text will persist until destroyed. To obtain a reference to this text, use the last text ID value. This action will fail if too many text elements have been created.">
    <parameter name="Visible to" description="One or more players who will see the HUD text. Can use most Value Syntax to select one or multiple players." />
    <parameter name="Header" description="The header text to be displayed (can be blank). Can use most String based Value Syntax to populate." />
    <parameter name="Position" description="The text’s position. If this value is a player, then the text will appear above the player’s head. Otherwise, the value is interpreted as a position in the world. Can use most Player or Vector based Value Syntax." />
    <parameter name="Scale" description="The text’s scale. Can use most Number based Value Syntax." />
    <parameter name="Clipping" description="Specifies whether the text can be seen through walls or is instead clipped.&#xA;&#xA;Clip Against Surfaces - The text may be partially or completely obscured by walls, floors, ceilings, players, or other solid objects.&#xA;Do not clip - The text will always be fully visible. Even if it is behind a wall or solid object." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continuously reevaluated, the text will keep asking for and using new values from reevaluated inputs.&#xA;&#xA;Visible to, Position, and String&#xA;Visible to and String&#xA;None" />
  </method>
  <method name="DAMAGE" description="Applies instantaneous damage to one or more players, possibly killing the players.">
    <parameter name="Player" description="The player or players who will receive damage. Can use most Player based Value Syntax to select one or multiple players." />
    <parameter name="Damager" description="The player who will receive credit for the damage. A damager of null indicates no player will receive credit. Can use most Player based Value Syntax for this value." />
    <parameter name="Amount" description="The amount of damage to apply. This amount may be modified by buffs, debuffs, or armor. Can use most Number based Value Syntax." />
  </method>
  <method name="DECLARE MATCH DRAW" description="Instantly ends the match in a draw. This action has no effect in free-for-all modes." />
  <method name="DECLARE PLAYER VICTORY" description="Instantly ends the match with the specific player as the winner. This action only has an effect in free-for-all modes.">
    <parameter name="Player" description="The winning player. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="DECLARE ROUND VICTORY" description="Declare a team as the current round winner. This only works in the control and elimination game modes.">
    <parameter name="Team" description="Round winning team. Can use most Team based Value Syntax for this value." />
  </method>
  <method name="DECLARE TEAM VICTORY" description="Instantly ends the match with the specified team as the winner. This action has no effect in free-for-all modes.">
    <parameter name="Team" description="The winning team. Can use most Team based Value Syntax for this value." />
  </method>
  <method name="DESTROY ALL DUMMY BOTS" description="Removes all dummy bots from the match." />
  <method name="DESTROY ALL EFFECTS" description="Destroys all effect entities created by create effect." />
  <method name="DESTROY ALL ICONS" description="Destroys all icon entities created by create icon." />
  <method name="DESTROY ALL IN-WORLD TEXT" description="Destroys all in-world text created by the create in-world effect." />
  <method name="DESTROY DUMMY BOT" description="Removes the specified dummy bot from the match.">
    <parameter name="Team" description="The team to remove the dummy bot from. The “ALL” option only works in Free-For-All game modes, while the “TEAM” options only work in team-based game modes." />
    <parameter name="Slot" description="The slot to remove the dummy bot from." />
  </method>
  <method name="DESTROY EFFECT" description="Destroys an effect entity that was created by create effect.">
    <parameter name="Entity" description="Specifies which effect entity to destroy. This entity may be the last created entity or a variable into which last created entity was earlier stored." />
  </method>
  <method name="DESTROY HUD TEXT" description="Destroys hud text that was created by create hud text.">
    <parameter name="Text ID" description="Specifies which hud text to destroy. This ID may be last text ID or a variable into which last text ID was earlier stored." />
  </method>
  <method name="DISABLE BUILT-IN GAME MODE ANNOUNCER" description="Disables game mode announcements from the announcer until reenabled or the match ends." />
  <method name="DISABLE BUILT-IN GAME MODE COMPLETION" description="Disables completion of the match from the game mode itself, only allowing the match to be completed by scripting commands." />
  <method name="DISABLE BUILT-IN GAME MODE MUSIC" description="Disables all game-mode music until reenabled or the match ends." />
  <method name="DISABLE BUILT-IN GAME MODE RESPAWNING" description="Disables automatic respawning for one or more players, only allowing respawning by scripting commands.">
    <parameter name="Player" description="The player or players whose respawning is affected. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="DISABLE BUILT-IN GAME MODE SCORING" description="Disables changes to player and team scores from the game mode itself, only allowing scores to be changed by scripting commands." />
  <method name="DISABLE DEATH SPECTATE ALL PLAYERS" description="Undoes the effect of the enable death spectate all players action for one or more players.">
    <parameter name="Player" description="The player or players whose default death spectate behavior is restored. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="DISABLE DEATH SPECTATE TARGET HUD" description="Undoes the effect of the enable death spectate target hud action for one or more players.">
    <parameter name="Player" description="The player or players who will revert to seeing their own HUD while death spectating. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="DISALLOW BUTTON" description="Disables a logical button for one or more players such that pressing it has no effect.">
    <parameter name="Player" description="The player executing this rule, as specified by the event. May be the same as the attacker or victim. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="ENABLE BUILT-IN GAME MODE ANNOUNCER" description="Undoes the effect of the disable built-in game mode announcer action." />
  <method name="ENABLE BUILT-IN GAME MODE COMPLETION" description="Undoes the effect of the disable built-in game mode completion action." />
  <method name="ENABLE BUILT-IN GAME MODE MUSIC" description="Undoes the effect of the disable built-in game mode music action." />
  <method name="ENABLE BUILT-IN GAME MODE RESPAWNING" description="Undoes the effect of the disable built-in game mode respawning for one or more players.">
    <parameter name="Player" description="The player or players whose respawning is affected. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="ENABLE BUILT-IN GAME MODE SCORING" description="Undoes the effect of the disable built-in game mode scoring action." />
  <method name="ENABLE DEATH SPECTATE ALL PLAYERS" description="Allows one or more players to spectate all players when dead, as opposed to only allies.">
    <parameter name="Player" description="The player or players who will be allowed to spectate all players. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="ENABLE DEATH SPECTATE TARGET HUD" description="Allows one or more players to see their target’s HUD when dead instead of their own while death spectating.">
    <parameter name="Player" description="The player or players who will begin seeing their spectate’s target’s hud while death spectating. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="GO TO ASSEMBLE HEROES" description="Go to the assemble heroes phase of the game mode. Only works if a game is in progress." />
  <method name="HEAL" description="Provides an instantaneous heal to one or more players. This heal will not resurrect dead players.">
    <parameter name="Player" description="The player or players whose health will be restored. Can use most Player based Value Syntax for this value." />
    <parameter name="Healer" description="The player who will receive credit for the healing. A healer of null indicates no player will receive credit. Can use most Player based Value Syntax for this value." />
    <parameter name="Amount" description="The amount of healing to apply. This amount may be modified by buffs or debuffs, healing is capped by each player’s max health. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="KILL" description="Instantly kills one or more players.">
    <parameter name="Player" description="The player or players who will be killed. Can use most Player based Value Syntax for this value." />
    <parameter name="Killer" description="The player who will receive credit for the kill. A killer of null indicates no player will receive credit. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="LOOP" description="Restarts the action list from the beginning. To prevent an infinite loop, a wait action must execute between the start of the action list and this action." />
  <method name="LOOP IF" description="Restarts the action list from the beginning if this action’s condition evaluates to true. If it does not, execution continues with the next action. To prevent an infinite loop, a wait action must execute between the start of the action list and this action.">
    <parameter name="Condition" description="Specifies whether the loop will occur. Can use most Conditional based Value Syntax for this value." />
  </method>
  <method name="MODIFY GLOBAL VARIABLE" description="Modifies the value of a global variable, which is a variable that belongs to the game itself.">
    <parameter name="Variable" description="Variable specified by a single alphabetic letter (A through Z)." />
    <parameter name="Operation" description="The way in which the variable’s value will be changed. Options include standard arithmetic operations as well as array operations for appending and removing values." />
    <parameter name="Value" description="The value used for the modification. For arithmetic operations, this is the second of two operands, with the other being the variable’s existing value. For array operations, this is the value to append or remove. Various Value Syntax can be used." />
  </method>
  <method name="MODIFY GLOBAL VARIABLE AT INDEX" description="Modifies the value of a global variable at an index, which is a variable that belongs to the game itself.">
    <parameter name="Variable" description="Variable specified by a single alphabetic letter (A through Z)." />
    <parameter name="Index" description="The index of the array to modify. If the index is beyond the end of the array, the array is extended with new elements given a value of 0." />
    <parameter name="Operation" description="The way in which the variable’s value will be changed. Options include standard arithmetic operations as well as array operations for appending and removing values." />
    <parameter name="Value" description="The value used for the modification. For arithmetic operations, this is the second of two operands, with the other being the variable’s existing value. For array operations, this is the value to append or remove. Various Value Syntax can be used." />
  </method>
  <method name="MODIFY PLAYER SCORE" description="Modifies the score (kill count) of one or more players. This action only has an effect in free-for-all modes.">
    <parameter name="Player" description="The player whose score will change. Can use most Player based Value Syntax for this value." />
    <parameter name="Score" description="The amount the score will increase or decrease. If positive, the score will increase. If negative, the score will decrease. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="MODIFY PLAYER VARIABLE" description="Modifies the value of a player variable, which is a variable that belongs to a specific player.">
    <parameter name="Player" description="The player whose variable will be modified. If multiple players are provided, each of their variables will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Variable" description="Variable specified by a single alphabetic letter (A through Z)." />
    <parameter name="Operation" description="The way in which the variable’s value will be changed. Options include standard arithmetic operations as well as array operations for appending and removing values." />
    <parameter name="Value" description="The value used for the modification. For arithmetic operations, this is the second of two operands, with the other being the variable’s existing value. For array operations, this is the value to append or remove. Various Value Syntax can be used." />
  </method>
  <method name="MODIFY PLAYER VARIABLE AT INDEX" description="Modifies the value of a player variable at an index, which is a variable that belongs to a specific player.">
    <parameter name="Player" description="The player whose variable will be modified. If multiple players are provided, each of their variables will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Variable" description="Variable specified by a single alphabetic letter (A through Z)." />
    <parameter name="Index" description="The index of the array to modify. If the index is beyond the end of the array, the array is extended with new elements given a value of 0." />
    <parameter name="Operation" description="The way in which the variable’s value will be changed. Options include standard arithmetic operations as well as array operations for appending and removing values." />
    <parameter name="Value" description="The value used for the modification. For arithmetic operations, this is the second of two operands, with the other being the variable’s existing value. For array operations, this is the value to append or remove. Various Value Syntax can be used." />
  </method>
  <method name="MODIFY TEAM SCORE" description="Modifies the score of one or both teams. This action has not effect in free-for-all modes or modes without a team score.">
    <parameter name="Team" description="The team whose score will be changed. Can use most Player based Value Syntax for this value." />
    <parameter name="Score" description="The amount the score will increase or decrease. If positive, the score will increase. If negative, the score will decrease. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="PAUSE MATCH TIME" description="Pauses the match time, players, objective logic, and game mode advancement criteria are unaffected by the pause." />
  <method name="PLAY EFFECT" description="Plays an effect at a position in the world. The lifetime of this effect is short, so it does not need to be updated or destroyed.">
    <parameter name="Visible to" description="One or more players who will be able to see the effect. Can use most Value Syntax to select one or multiple players." />
    <parameter name="Type" description="The type of the effect to be created.&#xA;&#xA;Good Explosion&#xA;Bad Explosion&#xA;Ring Explosion&#xA;Good Pickup Effect&#xA;Bad Pickup Effect&#xA;Debuff Impact Sound&#xA;Buff Impact Sound&#xA;Ring Explosion Sound&#xA;Buff Explosion Sound&#xA;Explosion Sound" />
    <parameter name="Color" description="The color of the effect to be created. IF a particular team is chosen, the effect will either be red or blue, depending on whether the team is hostile to the viewer." />
    <parameter name="Position" description="The effect’s position. If this value is a player, then the effect will move along with the player, otherwise, the value is interpreted as a position in the world. Can use most Player or Vector based Value Syntax." />
    <parameter name="Radius" description="The effect’s radius in meters. Can use most Number based Value Syntax." />
  </method>
  <method name="PRELOAD HERO" description="Preemptively loads the specified hero or heroes into memory using the skins of the specified player or players, available memory permitting. Useful whenever rapid hero changing is possible and the next hero is known.">
    <parameter name="Player" description="The player or players who will begin preloading a hero or heroes. Only one preload hero action will be active at a time for a given player. Can use most Player based Value Syntax for this value." />
    <parameter name="Hero" description="The hero or heroes to begin preloading for the specified player or players. When multiple heroes are specified in an array, the Heroes towards the beginning of the array are prioritized. Can use most Hero based Value Syntax for this value." />
  </method>
  <method name="PRESS BUTTON" description="Forces one or more players to press a button virtually for a single frame.">
    <parameter name="Player" description="The player or players for whom virtual button input will be forced. Can use most Player based Value Syntax for this value." />
    <parameter name="Button" description="The button to be pressed." />
  </method>
  <method name="RESET PLAYER HERO AVAILABILITY" description="Restores the list of heroes available to one or more players to the list specified by the game settings. If a player’s current hero becomes unavailable, the player is forced to choose a different hero and respawn at an appropriate spawn location.">
    <parameter name="Player" description="The player or players whose hero list is being reset. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="RESPAWN" description="Respawns one or more players at an appropriate spawn location with full health, even if they were already alive.">
    <parameter name="Player" description="The player or players to respawn. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="RESURRECT" description="Instantly resurrects one or more players at the location they died with no transition.">
    <parameter name="Player" description="The player or players who will be resurrected. Can use most Player based Value Syntax for this value." />
  </method>
  <method name="SET ABILITY 1 ENABLED" description="Enables or disables ability 1 for one or more players.">
    <parameter name="Player" description="The player or players whose access to ability 1 is affected. Can use most Player based Value Syntax for this value." />
    <parameter name="Enabled" description="Specifies whether the player or players are able to use ability 1. Expects a Boolean Value such as True, False, or Compare. Can use most Boolean based Value Syntax." />
  </method>
  <method name="SET ABILITY 2 ENABLED" description="Enables or disables ability 2 for one or more players.">
    <parameter name="Player" description="The player or players whose access to ability 2 is affected. Expects a Boolean Value such as True, False, or Compare. Can use most Player based Value Syntax for this value." />
    <parameter name="Enabled" description="Specifies whether the player or players are able to use ability 2. Can use most Boolean based Value Syntax." />
  </method>
  <method name="SET AIM SPEED" description="Sets the aim speed of one or more players to a percentage of their normal aim speed.">
    <parameter name="Player" description="The player or players whose aim will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Turn Speed Percent" description="The percentage of normal aim speed to which the player or players will set their aim speed. Can use most Number based Value Syntax." />
  </method>
  <method name="SET DAMAGE DEALT" description="Sets the damage dealt to one or more players of a percentage of their raw damage dealt. NOTE: Negative values do not heal enemies. Damage values of 0 or lower will not trigger script events.">
    <parameter name="Player" description="The player or players whose damage dealt will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Damage Dealt Percent" description="The percentage of raw damage dealt to which the player or players will set their damage dealt. Can use most Number based Value Syntax." />
  </method>
  <method name="SET DAMAGE RECEIVED" description="Sets the damage received of one or more players to a percentage of their raw damage received. NOTE: Negative values do not heal enemies. Damage values of 0 or lower will not trigger script events.">
    <parameter name="Player" description="The player or players whose damage received will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Damage Received Percent" description="The percentage of raw damage received to which the player or players will set their damage received. Can use most Number based Value Syntax." />
  </method>
  <method name="SET FACING" description="Sets the facing of one or more players to the specified direction.">
    <parameter name="Player" description="The player or players whose facing will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Direction" description="The unit direction in which the player or players will face. This value is normalized internally. Can use most Vector based Value Syntax.&#xA;*Relative - Specifies direction is relative to world coordinates or the local coordinates of the player or players." />
  </method>
  <method name="SET GLOBAL VARIABLE" description="Stores a value into a global variable, which a variable that belongs to the game itself.">
    <parameter name="Variable" description="Specifies which Global Variable to store the value into. Specified by a single alphabetic letter (A through Z)." />
    <parameter name="Value" description="The value that will be stored. Nearly any Value syntax can be used, however it is most common with Number based syntax." />
  </method>
  <method name="SET GRAVITY" description="Sets the movement gravity for one or more players to a percentage of regular movement gravity.">
    <parameter name="Player" description="The player or players whose movement gravity will be set. Can use most Player based Value Syntax with this value." />
    <parameter name="Gravity Percent" description="The percentage of regular movement gravity to which the player or players will set their personal movement gravity. Can use most Number based Value Sytax with this value. 100% is the normal gravity level of the game. Less than that will decrease gravity (allowing higher jumps), higher amounts will result in higher gravity (causing shorter jumps)." />
  </method>
  <method name="SET HEALING DEALT" description="Sets the healing dealt to one or more players of a percentage of their raw damage dealt. NOTE: Negative values do not damage enemies. Healing values of 0 or lower will not trigger script events.">
    <parameter name="Player" description="The player or players whose healing dealt will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Healing Dealt Percent" description="The percentage of raw healing dealt to which the player or players will set their healing dealt. Can use most Number based Value Syntax." />
  </method>
  <method name="SET HEALING RECEIVED" description="Sets the healing received of one or more players to a percentage of their raw healing received. NOTE: Negative values do not damage enemies. Healing values of 0 or lower will not trigger script events.">
    <parameter name="Player" description="The player or players whose healing received will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Healing Received Percent" description="The percentage of raw healing received to which the player or players will set their healing received. Can use most Number based Value Syntax." />
  </method>
  <method name="SET INVISIBLE" description="Causes one or more players to become invisible to either all other players or just enemies.">
    <parameter name="Player" description="The player or players who will become invisible. Can use most Player based Value Syntax for this value." />
    <parameter name="Invisible to" description="Specifies for whom the player or players will be invisible. Can be set to All, Enemies, or None." />
  </method>
  <method name="SET MATCH TIME" description="Sets the current match time (which is visible at the top of the screen). This can be used to shorten or extend the duration of a match or to change the duration of assemble heroes or setup.">
    <parameter name="Time" description="The match time in seconds. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET MAX HEALTH" description="Sets the max health of one or more players as a percentage of their raw max health. This action will ensure that a player’s current health will not exceed the new max health.">
    <parameter name="Player" description="The player or players whose max health will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Health Percent" description="The percentage of raw max health to which the player or players will set their max health. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET MOVE SPEED" description="Sets the move speed of one or more players to a percentage of their raw move speed.">
    <parameter name="Player" description="The player or players whose move speed will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Health Percent" description="The percentage of raw move speed to which the player or players will set their move speed. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET OBJECTIVE DESCRIPTION" description="Sets the text at the top center of the screen that normally describes the objective to a message visible to specific players.">
    <parameter name="Visible to" description="One or more players who will see the message. Can use most Number based Player Syntax for this value." />
    <parameter name="Header" description="The message to be displayed. Can use most String based Value Syntax for this value." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continously reevaluated. The message will keep asking for and using new values from reevaluated inputs. Can choose “Visible to and String” or “String”" />
  </method>
  <method name="SET PLAYER ALLOWED HEROES" description="Sets the list of heroes available to one or more players. If a player’s current hero becomes unavailable, the player is forced to choose a different hero and respawn at an appropriate spawn location.">
    <parameter name="Player" description="The player or players whose hero list is being set. Can use most Player based Value Syntax for this value." />
    <parameter name="Hero" description="The hero or heroes that will be available. If no heroes are provided, the action has no effect. Can use most Hero based Value Syntax for this value including compatible Arrays." />
  </method>
  <method name="SET PLAYER SCORE" description="Sets the score (kill count) of one or more players. This action only has an effect in free-for-all modes.">
    <parameter name="Player" description="The player or players whose score will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Score" description="The score that will be set. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET PLAYER VARIABLE" description="Stores a value into a player variable, which is a variable that belongs to a specific player.">
    <parameter name="Player" description="The player or players whose variable will be set. If multiple players are provided, each of their variables will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Variable" description="Specifies which Player Variable to store the value into. Specified by a single alphabetic letter (A through Z)." />
    <parameter name="Value" description="The value that will be stored. Nearly any Value syntax can be used, however it is most common with Number based syntax." />
  </method>
  <method name="SET PLAYER VARIABLE AT INDEX" description="Finds or creates an array on a player variable, which is a variable that belongs to a specific player, then stores a value in the array at the specified index.">
    <parameter name="Player" description="The player or players whose variable will be set. If multiple players are provided, each of their variables will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Variable" description="Specifies which player variable’s value is the array to modify, if the variable’s value is not an array, then its value becomes an empty array. Specified by a single alphabetic letter (A through Z)." />
    <parameter name="Index" description="The index of the array to modify. If the index is beyond the end of the array, the array is extended with the new elements given a value of zero. Can use most Number based Value Syntax with this value." />
    <parameter name="Value" description="The value that will be stored into the array. Nearly any Value syntax can be used, however it is most common with Number based syntax." />
  </method>
  <method name="SET PRIMARY FIRE ENABLED" description="Enables or disables primary fire for one or more players.">
    <parameter name="Player" description="The player or players whose access to primary fire is affected. Can use most Player based Value Syntax for this value." />
    <parameter name="Enabled" description="Specifies whether the player or players are able to use primary fire. Expects a Boolean Value such as True, False, or Compare. Can use most Boolean based Value Syntax." />
  </method>
  <method name="SET PROJECTILE GRAVITY" description="Sets the projectile gravity for one or more players to a percentage of regular projectile gravity.">
    <parameter name="Player" description="The player or players whose projectile gravity will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Projectile Gravity Percent" description="The percentage of the regular projectile gravity to which the player or players will set their personal projectile gravity. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET PROJECTILE SPEED" description="Sets the projectile speed for one or more players to a percentage of regular projectile speed.">
    <parameter name="Player" description="The player or players whose projectile speed will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Projectile Speed Percent" description="The percentage of the regular projectile speed to which the player or players will set their personal projectile speed. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET RESPAWN MAX TIME" description="Sets the duration between death and respawn for one or more players that are already dead when this action is executed, the change takes effect on their next death.">
    <parameter name="Player" description="The player or players whose respawn max time will is being defined. Can use most Player based Value Syntax for this value." />
    <parameter name="Time" description="The duration between death and respawn in seconds. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET SECONDARY FIRE ENABLED" description="Enables or disables secondary fire for one or more players.">
    <parameter name="Player" description="The player or players whose access to secondary fire is affected. Can use most Player based Value Syntax for this value." />
    <parameter name="Enabled" description="Specifies whether the player or players are able to use secondary fire. Expects a Boolean Value such as True, False, or Compare. Can use most Boolean based Value Syntax." />
  </method>
  <method name="SET SLOW MOTION" description="Sets the simulation rate for the entire game, including all players, projectiles, effects, and game mode logic.">
    <parameter name="Speed Percent" description="The simulation rate as a percentage of normal speed. Only rates up to 100% are allowed. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET STATUS" description="Applies a status to one or more players. This status will remain in effect for the specified duration or until it is cleared by the clear status action.">
    <parameter name="Player" description="The player or players to whom the status will be applied. Can use most Player based Value Syntax for this value." />
    <parameter name="Assister" description="Specifies a player to be awarded assist credit should the affected player or players be killed while the status is in effect. An assister of null indicates no player will receive credit. Can use most Player based Value Syntax for this value." />
    <parameter name="Status" description="The Status to be applied from the player or players. These behave similarly to statuses applied from hero abilities. Values include Hacked, Burning, Knocked Down, Asleep, Frozen, Unkillable, Invincible, Phased Out, Rooted, or Stunned." />
    <parameter name="Duration" description="The duration of the status effect in seconds. To have a status that lasts until a clear status action is executed, proivide an arbitrarily long duration such as 9999. Can use most Number based Value Syntax." />
  </method>
  <method name="SET TEAM SCORE" description="Sets the score for one or both teams. This action has no effect in free-for-all modes or modes without a team score.">
    <parameter name="Team" description="The team or teams whose score will be set. Can use most Team based Value Syntax for this value." />
    <parameter name="Score" description="The score that will be set. Can use most Number based Value Syntax for this value." />
  </method>
  <method name="SET ULTIMATE ABILITY ENABLED" description="Enables or disables the ultimate ability of one or more players.">
    <parameter name="Player" description="The player or players whose access to their ultimate ability is affected. Can use most Player based Value Syntax for this value." />
    <parameter name="Enabled" description="Specifies whether the player or players are able to use their ultimate ability. Expects a Boolean Value such as True, False, or Compare. Can use most Boolean based Value Syntax." />
  </method>
  <method name="SET ULTIMATE CHARGE" description="Sets the ultimate charge or one or more players as a percentage of maximum charge.">
    <parameter name="Player" description="The player or players whose ultimate charge will be set. Can use most Player based Value Syntax for this value." />
    <parameter name="Charge Percent" description="The percentage of maximum charge. Can use most Number based Value Syntax." />
  </method>
  <method name="SKIP" description="Skips execution of a certain number of actions in the action list.">
    <parameter name="Number of actions" description="The number of action to skip, not including this action. Can use most Number based Value Syntax." />
  </method>
  <method name="SKIP IF" description="Skips execution of a certain number of actions in the action list if this action’s condition evaluates to true. If it does not, execution continues with the next action.">
    <parameter name="Condition" description="Specifies whether the loop will occur. Can use most Conditional based Value Syntax for this value." />
    <parameter name="Number of actions" description="The number of action to skip, not including this action. Can use most Number based Value Syntax." />
  </method>
  <method name="SMALL MESSAGE" description="Displays a small message beneath the reticle that is visible to specific players.">
    <parameter name="Visible to" description="One or more players who will see the message. Can use most Player based Value Syntax." />
    <parameter name="Header" description="The message to be displayed. Can use most String based Value Syntax to specify." />
  </method>
  <method name="START ACCELERATING" description="Starts accelerating one or more players in a specified location.">
    <parameter name="Player" description="The player or players that will begin accelerating. Can use most Player based Value Syntax." />
    <parameter name="Direction" description="The unit direction in which the acceleration will be applied. This value is normalized internally. Can use most Vector based Value Syntax to specify." />
    <parameter name="Rate" description="The rate of acceleration in meters per second squared. This value may need to be quite high in order to overcome gravity and/or surface friction. Can use most Number based Value Syntax." />
    <parameter name="Max Speed" description="The speed at which acceleration will stop for the player or players. It may not be possible to reach this speed due to gravity and/or surface friction. Can use most Number based Value Syntax." />
    <parameter name="Relative" description="Specifies whether direction is relavtive to the world coordinates or the local coordinates of the player or players." />
    <parameter name="Reevaluation" description="Specifies which of this actions inputs will be continously reevaluated. This action will keep asking for and using new values from reevaluated inputs. You can choose from “Direction, Rate, and Max Speed” or “None”." />
  </method>
  <method name="START CAMERA" description="Places your camera at a location, facing a direction.">
    <parameter name="Player" description="The player executing this rule. As specified by the event, may be the same as the attacker or the victim. Can use most Player based Value Syntax." />
    <parameter name="Eye Position" description="The position of the camrea, reevaluates continously. Can use most Vector based Value Syntax to specify." />
    <parameter name="Look at position" description="Where the camera looks at, reevaluates continously. Can use most Vector based Value Syntax to specify." />
    <parameter name="Blend Speed" description="How fast to blend the camera movement as positions change. 0 means do not blend at all and just change positions instantly. Can use most Number based Value Syntax." />
  </method>
  <method name="START DAMAGE MODIFICATION" description="Starts modifying how much damage one or more receivers will receive from one or more damagers. A reference to this damage modification can be obtained from the last damage modification ID value. This action will fail if too many damage modifications have been started.">
    <parameter name="Receivers" description="The player or players whose incoming damage will be modified. Can use most Player based Value Syntax." />
    <parameter name="Damagers" description="The player or players whose outgoing damage will be modified (when attacking the receivers). Can use most Player based Value Syntax." />
    <parameter name="Damage Percent" description="The percentage of damage that will apply to receivers when attacked by damagers. Can use most Number based Value Syntax to specify." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continously reevaluated. This action will keep asking for and using new values from reevaluated inputs. Can choose from “Receivers, Damagers, and Damage Percent”, “Receivers and Damagers”, or “None”." />
  </method>
  <method name="START DAMAGE OVER TIME" description="Starts an instance of damage over time, this DOT will persist for the specified duration or until stopped by script. To obtain a reference to this DOT, use the last damage over time to value.">
    <parameter name="Receivers" description="One or more players who will receive the damage over time. Can use most Player based Value Syntax." />
    <parameter name="Damager" description="The player who will receive credit for the damage. A damager of null indicates no player will receive credit. Can use most Player based Value Syntax." />
    <parameter name="Duration" description="The duration of the damage over time in seconds. To have a DOT that lasts until stopped by script, provide an arbitrarily long duration such as 9999. Can use most Number based Value Syntax to specify." />
    <parameter name="Damage Per Second" description="The damage per second for the damage over time. Can use most Number based Value Syntax to specify." />
  </method>
  <method name="START FACING" description="Starts turning one or more players to face the specified direction.">
    <parameter name="Player" description="The player or players who will start turning. Can use most Player based Value Syntax." />
    <parameter name="Direction" description="The unit direction in which the player or players will eventually face. Can use most Vector based Value Syntax." />
    <parameter name="Turn Rate" description="The turn rate in degrees per second. Can use most Number based Value Syntax to specify." />
    <parameter name="Relative" description="Specifies whether direction is relative to the world coordinates or the local coordinates of the player or players." />
    <parameter name="Reevaluation" description="Specifies which of this actions inputs will be continously reevaluated. This action will keep asking for and using new values from reevaluated inputs. You can choose from “Direction and Turn Rate” or “None”." />
  </method>
  <method name="START FORCING PLAYER TO BE HERO" description="Starts forcing one or more players to be a specified hero and, if necessary, respawns them immediately in their current locaiton. This will be the only hero available to the player or players until, the stop forcing player to be hero action is executed.">
    <parameter name="Player" description="The player or players who will be forced to be a specified hero. Can use most Player based Value Syntax." />
    <parameter name="Hero" description="The hero that the player or players will be forced to be. Can use most Hero based Value Syntax." />
  </method>
  <method name="START FORCING SPAWN ROOM" description="Forces a team to spawn in a particular spawn room, regardless of the sapwn room normally used by the game mode. This action only has an effect in Assault, Hybrid, and Payload Maps.">
    <parameter name="Team" description="The team whose spawn room will be forced. Can use most Team based Value Syntax." />
    <parameter name="Room" description="The number of the spawn room to be forced. 0 is the first spawn room, 1 is the second, and 2 is the third. If this specified spawn room does not exist. Players will use the normal spawn room. Can use most Number based Value Syntax." />
  </method>
  <method name="START FORCING THROTTLE" description="Defines minimum and maximum movement input values for one or more players. Possibly forcing or preventing movement.">
    <parameter name="Player" description="The player or players whose movement whill be forced or limited. Can use most Player based Value Syntax." />
    <parameter name="Min Forward" description="Sets the minimum run forward amount. 0 allows the player or players to stop while 1 forces full forward movement. Can use most Number based Value Syntax." />
    <parameter name="Max Forward" description="Sets the maximum run forward amount. 0 allows the player or players to stop while 1 forces full forward movement. Can use most Number based Value Syntax." />
    <parameter name="Min Backward" description="Sets the minimum run backward amount. 0 allows the player or players to stop while 1 forces full forward movement. Can use most Number based Value Syntax." />
    <parameter name="Max Backward" description="Sets the maximum run backward amount. 0 allows the player or players to stop while 1 forces full forward movement. Can use most Number based Value Syntax." />
    <parameter name="Min Sideways" description="Sets the minimum run sideways amount. 0 allows the player or players to stop while 1 forces full forward movement. Can use most Number based Value Syntax." />
    <parameter name="Max Forward" description="Sets the maximum run sideways amount. 0 allows the player or players to stop while 1 forces full forward movement. Can use most Number based Value Syntax." />
  </method>
  <method name="START HEAL OVER TIME" description="Starts an instance of damage over time, this HOT will persist for the specified duration or until stopped by script. To obtain a reference to this HOT, use the last damage over time to value.">
    <parameter name="Player" description="One or more players who will receive the heal over time. Can use most Player based Value Syntax." />
    <parameter name="Healer" description="The player who will receive credit for the heal. A damager of null indicates no player will receive credit. Can use most Player based Value Syntax." />
    <parameter name="Duration" description="The duration of the heal over time in seconds. To have a HOT that lasts until stopped by script, provide an arbitrarily long duration such as 9999. Can use most Number based Value Syntax to specify." />
    <parameter name="Damage Per Second" description="The heal per second for the heal over time. Can use most Number based Value Syntax to specify." />
  </method>
  <method name="START HOLDING BUTTON" description="Forces one or more players to hold a button virtually until stopped by the stop holding button action.">
    <parameter name="Player" description="The player or players who are holding a button virtually. Can use most Player based Value Syntax." />
    <parameter name="Button" description="The logical button that is being held virtually." />
  </method>
  <method name="START THROTTLE IN DIRECTION" description="Sets or adds to the throttle (directional input control) of a player or players such that they begin moving in a particular direction. Any previous throttle in direction is cancelled.">
    <parameter name="Player" description="The player or players whose throttle will be set or added to." />
    <parameter name="Direction" description="The unit direction in which the throttle will be set or added to. This value is normalized internally." />
    <parameter name="Magnitude" description="The amount of throttle (or change to throttle). A value of 1 denotes full throttle." />
    <parameter name="Relative" description="Specifies whether direction is relative to world coordinates or the local coordinates of the player or players." />
    <parameter name="Behavior" description="Specifies whether preexisting throttle is replaced or added to." />
    <parameter name="Reevaluation" description="Specifies which of this action’s inputs will be continously reevaluated. This action will keep asking for and using new values from reevaluated inputs." />
  </method>
  <method name="START TRANSFORMING THROTTLE" description="Starts transforming (scaling and rotating) the throttle (directional input control) of a player or players. Cancels any existing START TRANSFORMING THROTTLE behavior.">
    <parameter name="Player" description="The player or players whose throttle will be transformed." />
    <parameter name="X Axis Scalar" description="The player or players will have their throttle X Axis (Left to Right) multiplied by this value before the throttle is rotated to its new relative direction. This value is evaluated continously (meaning it updates every frame)." />
    <parameter name="Y Axis Scalar" description="The player or players will have their throttle Y Axis (Front to Back) multiplied by this value before the throttle is rotated to its new relative direction. This value is evaluated continously (meaning it updates every frame)." />
    <parameter name="Relative Direction" description="After the axis scalars are applied, the player or players will have their throttle transformed so that it is relative to this unit direction vector. For Example, to make the throttle camera relative, provide the direction that the camera is facing. This value is evaluated continously (meaning it updates every frame) and normalized internally." />
  </method>
  <method name="STOP ACCELERATING" description="Stops the acceleration started by the start accelerating action for one or more players.">
    <parameter name="Player" description="The player or players who will stop accelerating. Can use most Player based Value Syntax." />
  </method>
  <method name="STOP ALL DAMAGE MODIFICATIONS" description="Stops the all damage modifications that were started using the start damage modification action." />
  <method name="STOP ALL DAMAGE OVER TIME" description="Stops all damage over time started by the start damage over time or one or more players.">
    <parameter name="Player" description="The player or players whose scripted damage over time will stop. Can use most Player based Value Syntax." />
  </method>
  <method name="STOP ALL HEAL OVER TIME" description="Stops all heal over time started by the start heal over time or one or more players.">
    <parameter name="Player" description="The player or players whose scripted heal over time will stop. Can use most Player based Value Syntax." />
  </method>
  <method name="STOP CAMERA" description="Stops all forced camera positions started by the start camera or one or more players.">
    <parameter name="Player" description="The player or players whose forced camera positions will stop. Can use most Player based Value Syntax." />
  </method>
  <method name="STOP CHASING GLOBAL VARIABLE" description="Stops an in-progress chase of a global variable, leaving it at its current value.">
    <parameter name="Variable" description="Specifies which global variable to stop modifying. Specified by a single alphabetic letter (A through Z)." />
  </method>
  <method name="STOP CHASING PLAYER VARIABLE" description="Stops an in-progress chase of a player variable, leaving it at its current value.">
    <parameter name="Player" description="The player whose variable will stop changing. If multiple players are provided, each of their variables will stop changing. Can use most Player based Value Syntax." />
    <parameter name="Variable" description="Specifies which player variable to stop modifying. Specified by a single alphabetic letter (A through Z)." />
  </method>
  <method name="STOP DAMAGE MODIFICATION" description="Stops a damage modification that was started by the start damage modification action">
    <parameter name="Damage modification ID" description="Specifies which damage modification instance to stop, this ID may be the last damage modification ID or a variable into which last damage modification ID was earlier stored. Can use most Number based Value Syntax." />
  </method>
  <method name="STOP DAMAGE OVER TIME" description="Stops an instance of damage over time that was started by the start damage over time action">
    <parameter name="Damage Over Time ID" description="Specifies which damage over time instance to stop, this ID may be the last damage over time ID or a variable into which last damage over time ID was earlier stored. Can use most Number based Value Syntax." />
  </method>
  <method name="STOP FACING" description="Stops the turning started by the start facing action for or one or more players.">
    <parameter name="Player" description="The player or players who will stop turning. Can use most Player based Value Syntax." />
  </method>
  <method name="STOP FORCING PLAYER TO BE HERO" description="Stops forcing one or more players to be a specified hero. This will not respawn the player or players, but it will restore their availablity the next time they go to select a hero.">
    <parameter name="Player" description="The player or players who will no longer be forced to be a specific hero. Can use most Player based Value Syntax." />
  </method>
  <method name="STOP FORCING SPAWN ROOM" description="Undoes the effect of start forcing spawn room action for the specified team.">
    <parameter name="Team" description="The team that will resume using their normal spawn room. Can use most Team based Value Syntax." />
  </method>
  <method name="STOP FORCING THROTTLE" description="Undoes the effect of start forcing throttle action for one or more players">
    <parameter name="Player" description="The player or players whose movement inout will be restored. Can use most Player based Value Syntax." />
  </method>
  <method name="STOP HEAL OVER TIME" description="Stops an instance of heal over time that was started by the start heal over time action">
    <parameter name="Heal Over Time ID" description="Specifies which heal over time instance to stop, this ID may be the last heal over time ID or a variable into which last heal over time ID was earlier stored. Can use most Number based Value Syntax." />
  </method>
  <method name="STOP HOLDING BUTTON" description="Undoes the effect of the start holding button action for one or more players.">
    <parameter name="Player" description="The player or players who are no longer holding a button virtually. Can use most Player based Value Syntax." />
  </method>
  <method name="STOP THROTTLE IN DIRECTION" description="Cancels the behavior caused by START THROTTLE IN DIRECTION.">
    <parameter name="Player" description="The player or players whose default throttle control will be restored." />
  </method>
  <method name="STOP TRANSFORMING THROTTLE" description="Stops the throttle transform started by START TRANSFORMING THROTTLE for one or more players.">
    <parameter name="Player" description="The player or players whose throttle will stop being transformed." />
  </method>
  <method name="TELEPORT" description="Teleports one or more players to the specified location.">
    <parameter name="Player" description="The player or players to teleport. Can use most Player based Value Syntax." />
    <parameter name="Position" description="The position to which the player or players will teleport. If a player is providedm the position of the player is used. Can use most Vector based Value Syntax." />
  </method>
  <method name="UNPAUSE MATCH TIME" description="Unpauses the match time." />
  <method name="WAIT" description="Pauses the execution of the action list, unless the wait is interrupted. The remainder of the actions will execute after the pause.">
    <parameter name="Time" description="The duration of the pause. A minimum value of 0.250 seconds is required. Can use most Number based Value Syntax." />
    <parameter name="Wait Behavior" description="Specifies if and how the wait can be interrupted. If the condition list is ignored, the wait will not be interrupted, otherwise, the condition list will determine if and when the action list will abort or restart." />
  </method>
  <method name="ABSOLUTE VALUE" description="The absolute value is a measure of how far the number is from zero. If you think of a number line, with zero in the center, all you’re really doing is asking how far away you are from this zero point. For example the Absolute Value of 4 is 4 and the absolute value of -6 is 6.">
    <parameter name="Value" description="You can specify any Value Syntax to define the Absolute Value." />
  </method>
  <method name="ADD" description="The sum of two numbers or vectors. This value will add the two specified values.">
    <parameter name="Value" description="You can specify any Value Syntax to define either addend." />
  </method>
  <method name="ALL DEAD PLAYERS" description="An array containing all dead players on a team in a match. A player is defined as being dead when they are eliminated but have not yet respawned back into the game.">
    <parameter name="Team" description="You can specify any Team Syntax to define the array." />
  </method>
  <method name="ALL HEROES" description="An array of all heroes in Overwatch. Not to be confused with the All Players array" />
  <method name="ALL LIVING PLAYERS" description="An array containing all living players on a team in a match. A player is defined as being alive when they are spawned into the game but have not yet been eliminated since spawning.">
    <parameter name="Team" description="You can specify any Team Syntax to define the array." />
  </method>
  <method name="ALL PLAYERS" description="An array containing all players on a team in a match.">
    <parameter name="Team" description="You can specify any Team Syntax to define the array." />
  </method>
  <method name="ALL PLAYERS NOT ON OBJECTIVE" description="An array containing all players occupying neither a payload nor a control point (either on a team or in a match).">
    <parameter name="Team" description="You can specify any Team Syntax to define the array." />
  </method>
  <method name="ALL PLAYERS ON OBJECTIVE" description="An array containing all players occupying either a payload or a control point (either on a team or in a match).">
    <parameter name="Team" description="You can specify any Team Syntax to define the array." />
  </method>
  <method name="ALLOWED HEROES" description="The array of heroes from which the specified player is currently allowed to select.">
    <parameter name="Player" description="You can specify any Player Syntax to define the array." />
  </method>
  <method name="ALTITUDE OF" description="The player’s current height in meters above a surface. Results in a 0 whenever the place is on a surface.">
    <parameter name="Player" description="You can specify any Player Syntax to define the array." />
  </method>
  <method name="AND" description="Whether both of the two inputs are true or equivalent to true.">
    <parameter name="Value" description="You can specify any Value Syntax to define both of the required values." />
  </method>
  <method name="ANGLE DIFFERENCE" description="The difference between two angles, after the angles are wrapped within +/- 180 of each other, the result is positive if the second angle is greater than the first angle, otherwise the result is zero or negative.">
    <parameter name="Angle" description="You can specify any Angle Syntax to define both of the required values." />
  </method>
  <method name="APPEND TO ARRAY" description="A copy of an array with one or more values appended to the end.">
    <parameter name="Array" description="You must specify the Array Syntax you are adding the value to." />
    <parameter name="Value" description="You must specify the Value Syntax that you are adding to the array." />
  </method>
  <method name="ARRAY CONTAINS" description="Whether the specified array contains the specified value.">
    <parameter name="Array" description="You must specify the Array Syntax you are comparing the value to." />
    <parameter name="Value" description="You must specify the Value Syntax that you are comparing to the array." />
  </method>
  <method name="ARRAY SLICE" description="A copy of the specified array containing only values from a specified index range.">
    <parameter name="Array" description="You must specify the Array Syntax you are comparing the value to." />
    <parameter name="Start Index" description="The first index of the range. Can use most Value Syntax to specify with." />
    <parameter name="Count" description="The number of elements in the resulting array. The resulting array will contain fewer elements if the specified range exceeds the bounds of the array. Can use any Number-based Value Syntax to specify with." />
  </method>
  <method name="ATTACKER" description="The player that dealt damage for the event currently being processed by this rule. May be the same as the victim or the event player." />
  <method name="BACKWARD" description="Shorthand for the direction vector(0, 0, -1) which points backwards." />
  <method name="CLOSEST PLAYER TO" description="The player closest to a position, optionally restricted by team.">
    <parameter name="Center" description="The position to which to measure proximity. Can use most Value Syntax related to reporting a position in the map." />
    <parameter name="Team" description="You can specify any Team Syntax to restrict which players is reported when defining this value." />
  </method>
  <method name="COMPARE" description="Whether the comparison of the two inputs is true.">
    <parameter name="Value" description="The left hand side of the comparison. This may be any value type if the operation is == or =!, otherwise real numbers are expected. Can use most Value Syntax for the comparison." />
    <parameter name="Condition" description="One of the standard conditions to use for comparison. See the Condition section for details." />
    <parameter name="Value" description="The right hand side of the comparison. This may be any value type if the operation is == or =!, otherwise real numbers are expected. Can use most Value Syntax for the comparison." />
  </method>
  <method name="CONTROL MODE SCORING PERCENTAGE" description="The score percentage for the specified team in the control mode.">
    <parameter name="Team" description="You can specify any Team Syntax to define which team reported when defining this value." />
  </method>
  <method name="CONTROL MODE SCORING TEAM" description="The team that is currently accumulating score percentage in control mode Results in all if neither team is accumulating score." />
  <method name="COSINE FROM DEGREES" description="The cosine of a specified angle in degrees. The cosine of the angle is equal to the length of the adjacent side divided by the length of the hypotenuse.">
    <parameter name="Angle" description="You can specify any Angle Syntax to define this value." />
  </method>
  <method name="COSINE FROM RADIANS" description="The cosine of a specified angle in radians. The cosine of the angle is equal to the length of the adjacent side divided by the length of the hypotenuse. A radian is a unit of angle, equal to an angle at the center of a circle whose arc is equal in length to the radius.">
    <parameter name="Angle" description="You can specify any Angle Syntax to define this value." />
  </method>
  <method name="COUNT OF" description="The number of elements in the specified array.">
    <parameter name="Array" description="You must specify the Array Syntax you are counting the elements to." />
  </method>
  <method name="CROSS PRODUCT" description="The cross product of the specified values.">
    <parameter name="Value" description="You must specify the first Value Syntax to compare to the second." />
    <parameter name="Value" description="You must specify the first Value Syntax to compare to the second." />
  </method>
  <method name="CURRENT ARRAY ELEMENT" description="The current array element being considered. Only meaningful during the evaluation of values such as filtered array and sorted array." />
  <method name="DIRECTION FROM ANGLES" description="The unit-length direction vector corresponding to the specified angles.">
    <parameter name="Horizontal Angle" description="The horizontal angle in degrees used to construct the resulting vector. Most angle based Value Syntax can be used here." />
    <parameter name="Vertical Angle" description="The vertical angle in degrees used to construct the resulting vector. Most angle based Value Syntax can be used here." />
  </method>
  <method name="DIRECTION TOWARDS" description="The unit-length direction vector from position to another.">
    <parameter name="Start Pos" description="The position from which the resulting direction vector will point. Most positional based Value Syntax can be used here." />
    <parameter name="End Pos" description="The position to which the resulting direction vector will point. Most positional based Value Syntax can be used here." />
  </method>
  <method name="DISTANCE BETWEEN" description="The distance between two positions in meters.">
    <parameter name="Start Pos" description="One of the two positions used in the distance measurement. Most positional based Value Syntax can be used here." />
    <parameter name="End Pos" description="One of the two positions used in the distance measurement. Most positional based Value Syntax can be used here." />
  </method>
  <method name="DIVIDE" description="The ratio of two numbers or vectors. A vector divided by a number will yield a scaled vector. Division by zero results in zero.">
    <parameter name="Value" description="The left-hand operand, may be any value that results in a number or a vector. Any Value Syntax may be used here." />
    <parameter name="Value" description="The right-hand operand, may be any value that results in a number or a vector. Any Value Syntax may be used here." />
  </method>
  <method name="DOT PRODUCT" description="The dot product of the specified values. The dot product tells you what amount of one vector goes in the direction of another.">
    <parameter name="Value" description="One of the two vector operands of the dot product. Any positional based Syntax may be used here." />
    <parameter name="Value" description="One of the two vector operands of the dot product. Any positional based Syntax may be used here." />
  </method>
  <method name="DOWN" description="Shorthand for the direction vector(0, -1, 0) which points down." />
  <method name="EMPTY ARRAY" description="An array with no elements." />
  <method name="ENTITY EXISTS" description="Whether the specified player, icon entity, or effect entity still exists. Useful for determining if a player has left the match or an entity has been destroyed.">
    <parameter name="Entity" description="The player, icon entity, or effect entity whose existance to check." />
  </method>
  <method name="EVENT PLAYER" description="The player executing the rule, as specified by the event, may be the same as the attacker or victim." />
  <method name="FACING DIRECTION OF" description="The unit-length directional vector of a player’s current facing relative to the world. This value includes both horizontal and vertical facing.">
    <parameter name="Player" description="The player whose facing direction to acquire. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="FALSE" description="The Boolean value of false." />
  <method name="FARTHEST PLAYER FROM" description="The player farthest to a position, optionally restricted by team.">
    <parameter name="Center" description="The position to which to measure proximity. Can use most Value Syntax related to reporting a position in the map." />
    <parameter name="Team" description="You can specify any Team Syntax to restrict which players is reported when defining this value." />
  </method>
  <method name="FILTERED ARRAY" description="A copy of the specified array with any values that do not match the specified condition removed.">
    <parameter name="Array" description="The array whose copy will be filtered. Can use most Array Syntax to specify." />
    <parameter name="Condition" description="The condition that is evaluated for each element of the copied array. If the condition is true, the element is kept in the copied array. Use the current array element value to reference the element of the array currently being considered." />
  </method>
  <method name="FIRST OF" description="The value at the started of the specified array. Results in a 0 if the specified array is empty.">
    <parameter name="Array" description="The array from which the value is acquired. Can use most Array Syntax to specify." />
  </method>
  <method name="FLAG POSITION" description="The position of a specific team’s flag in Capture the Flag.">
    <parameter name="Team" description="The team whose flag position to acquire." />
  </method>
  <method name="FORWARD" description="Shorthand for the direction vector(0, 0, 1) which points forward." />
  <method name="GLOBAL VARIABLE" description="The current value of a global variable, which is a variable which belongs to the custom game itself.">
    <parameter name="Variable" description="Variable specified by a single alphabetic letter (A through Z)." />
  </method>
  <method name="HAS SPAWNED" description="Whether an entity has spawned in the world. Results in false for players who have not chosen a hero yet.">
    <parameter name="Entity" description="The player, icon entity, or effect entity whose presence in world to check." />
  </method>
  <method name="HAS STATUS" description="Whether the specified player has the specified status, either from the set status action or from a non-scripted game mechanic.">
    <parameter name="Player" description="The player whose status to check." />
    <parameter name="Status" description="The status to check for. Values include Hacked, Burning, Knocked Down, Asleep, Frozen, Unkillable, Invincible, Phased Out, Rooted, or Stunned." />
  </method>
  <method name="HEALTH" description="The current health of a player including armor and shields.">
    <parameter name="Player" description="The player whose health to acquire." />
  </method>
  <method name="HERO" description="A hero constant. Specifies one of the available heroes by name in the game.">
    <parameter name="Hero" description="A hero constant. (i.e. Tracer, Reaper, Mercy, Reinhardt. etc.)" />
  </method>
  <method name="HERO ICON STRING" description="Converts a hero parameter into a string that shows up as an icon.">
    <parameter name="Value" description="The hero that will be converted as an icon." />
  </method>
  <method name="HERO OF" description="The Current Hero of a Player.">
    <parameter name="Player" description="The player whose hero to acquire. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="HORIZONTAL ANGLE FROM DIRECTION" description="The horizontal angle in degrees corresponding to the specified direction vector.">
    <parameter name="Direction" description="The direction vector from which to acquire a horizontal angle in degrees. The vector is unitized before calculation begins. Can use most Vector based Value Syntax to retrieve this value." />
  </method>
  <method name="HORIZONTAL ANGLE TOWARDS" description="The horizontal angle in degrees from a player’s current forward direction to the specified position. The result is positive if the position is on the player’s left, otherwise the result is zero or negative.">
    <parameter name="Player" description="The player whose current facing angle begins. Can use most player based Value Syntax to retrieve this value." />
    <parameter name="Position" description="The position in the world in where the angle ends." />
  </method>
  <method name="HORIZONTAL FACING ANGLE OF" description="The directional angle in degrees of a player’s current facing relative to the world. This value increases as the player rotates to the left (wrapping around at +/- 180).">
    <parameter name="Player" description="The player whose facing direction to acquire. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="HORIZONTAL SPEED OF" description="The current horizontal speed of a player in meters per second. This measurement excludes all vertical motion.">
    <parameter name="Player" description="The player whose facing direction to acquire. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="INDEX OF ARRAY VALUE" description="The index of a value within an array or -1 if no such value can be found.">
    <parameter name="Array" description="The array in which to search for the specified value. Can use most Array based Value Syntax to retrieve this value." />
    <parameter name="Value" description="The value for which to search. Can use most Number based Value Syntax to retrive this value." />
  </method>
  <method name="IS ALIVE" description="Determines whether a player is alive. Returns a Boolean value.">
    <parameter name="Player" description="The player whose life to check. Can use most player based Value Syntax to retrive this value." />
  </method>
  <method name="IS ASSEMBLING HEROES" description="Whether the match is currently in its assemble heroes phase." />
  <method name="IS BETWEEN ROUNDS" description="Whether the match is between rounds." />
  <method name="IS BUTTON HELD" description="Whether a player is holding a specific button.">
    <parameter name="Player" description="The player whose button to check. Can use most player based Value Syntax to retrieve this value." />
    <parameter name="Button" description="The button to check. Designed by any action inputs by ability but not directional inputs. (i.e. Primary Fire, Secondary Fire, Ultimate Ability, Jump, Crouch, etc.)" />
  </method>
  <method name="IS COMMUNICATING" description="Whether a player is using a specific communication type (such as emote, using a voice line, etc.).">
    <parameter name="Player" description="The player whose communication status to check. Can use most player based Value Syntax to retrieve this value." />
    <parameter name="Type" description="The type of communication to consider. The duration of emotes is exact, the duration of voice lines is assumed to be 4 seconds, and all other durations are assumed to be 2 seconds. Any of the four emote slots, four voice lines slots, or any standard communication (Need healing, Ultimate Status, etc.) can be designated." />
  </method>
  <method name="IS COMMUNICATING ANY" description="Whether a player is using any communication type (such as emoting, using a voice line, etc.)">
    <parameter name="Player" description="The player whose communication status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS COMMUNICATING ANY EMOTE" description="Whether a player is using a emote.">
    <parameter name="Player" description="The player whose emoting status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS COMMUNICATING ANY VOICE LINE" description="Whether a player is using a voice line. (The duration of a voice line is assumed to be 4 seconds.)">
    <parameter name="Player" description="The player whose voice line status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS CONTROL MODE POINT LOCKED" description="Whether the point is locked in control mode." />
  <method name="IS CROUCHING" description="Whether a player is crouching.">
    <parameter name="Player" description="The player whose crouching status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS CTF MODE IN SUDDEN DEATH" description="Whether the current game of capture the flag is in sudden death." />
  <method name="IS DEAD" description="Whether a player is dead.">
    <parameter name="Player" description="The player whose death to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS FIRING PRIMARY" description="Whether the specified player’s primary weapon attack is being used.">
    <parameter name="Player" description="The player whose primary weapon attack to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS FIRING SECONDARY" description="Whether the specified player’s secondary weapon attack is being used.">
    <parameter name="Player" description="The player whose secondary weapon attack to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS FLAG AT BASE" description="Whether a specific team’s flag is at its base in capture the flag.">
    <parameter name="Team" description="The player whose flag to check. Can use most team based Value Syntax to retrive this value." />
  </method>
  <method name="IS GAME IN PROGRESS" description="Whether the main phase of the match is in progress (during which time combat and scoring are allowed)." />
  <method name="IS HERO BEING PLAYED" description="Whether a specific hero is being played (either on a team or in the match).">
    <parameter name="Hero" description="The hero to check for play. Can use most team based Value Syntax to retrive this value. Any applicable Hero based Value Syntax can be used." />
    <parameter name="Team" description="The team or teams on which to check for the hero being played. Can use most team based Value Syntax to retrieve this value." />
  </method>
  <method name="IS IN AIR" description="Whether a player is airborne.">
    <parameter name="Player" description="The player whose airborne status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS IN LINE OF SIGHT" description="Whether two positions have line of sight with each other.">
    <parameter name="Start Pos" description="The start position for the line of sight check. Most positional based Value Syntax can be used here." />
    <parameter name="End Pos" description="The end position for the line of sight check. Most positional based Value Syntax can be used here." />
    <parameter name="Barriers" description="Defines how barriers affect line of sight, when considering whether a barrier belongs to an enemy, the allegiance of the player provided to start pos (if any) is used. Can be set to “Barriers do not block LOS”, Enemy barriers block LOS&quot;, and “All barriers block LOS”." />
  </method>
  <method name="IS IN SETUP" description="Whether the match is currently in its setup phase." />
  <method name="IS IN SPAWN ROOM" description="Whether a specific player is in the spawn room (and is thus being healed and able to change heroes).">
    <parameter name="Player" description="The player whose spawn room status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS IN VIEW ANGLE" description="Whether a location is within view of a player.">
    <parameter name="Player" description="The player whose view to use for the check. Can use most player based Value Syntax to retrieve this value." />
    <parameter name="Location" description="The location to test if it’s within view. Most positional based Value Syntax can be used here." />
    <parameter name="View Angle" description="The view angle to compare against in degrees. Can use most angle based Value Syntax to retrieve this value." />
  </method>
  <method name="IS MATCH COMPLETE" description="Whether the match has finished." />
  <method name="IS MOVING" description="Whether a specific player is moving (as defined by having a non-zero constant speed).">
    <parameter name="Player" description="The player whose moving status status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS OBJECTIVE COMPLETE" description="Whether the specified objective has been completed Results in false if the game mode is not assault, escort, or assault/escort (hybrid).">
    <parameter name="Number" description="The index of the objective to consider, starting at 0 and counting up. Each control point, payload checkpoint, and payload destination has its own index. Can use most number based Value Syntax to retrieve this value. Value must be in the form of an integer (whole number)." />
  </method>
  <method name="IS ON GROUND" description="Whether a player is on the ground (or other walkable surface).">
    <parameter name="Player" description="The player whose ground status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS ON OBJECTIVE" description="Whether a specific player is currently occupying a payload or capture point.">
    <parameter name="Player" description="The player whose objective status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS ON WALL" description="Whether a player is on a wall (climbing or riding).">
    <parameter name="Player" description="The player whose wall status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS PORTRAIT ON FIRE" description="Whether a specific player’s portrait is on fire.">
    <parameter name="Player" description="The player whose portrait to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS STANDING" description="Whether a player is standing (defined as both not moving and not in the air).">
    <parameter name="Player" description="The player whose standing status to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS TEAM ON DEFENSE" description="Whether the specified team is currently on defense in a standard match.">
    <parameter name="Team" description="The team whose role to check. Can use most Team Based Value Syntax to retrieve this value." />
  </method>
  <method name="IS TEAM ON OFFENSE" description="Whether the specified team is currently on offense in a standard match.">
    <parameter name="Team" description="The team whose role to check. Can use most Team Based Value Syntax to retrieve this value." />
  </method>
  <method name="IS TRUE FOR ALL" description="Whether the specified condition evaluates to true for every value in the specified array.">
    <parameter name="Array" description="The array whose values will be considered. Can use most Array Based Value Syntax to retrieve this value." />
    <parameter name="Condition" description="The condition that is evaluated for each element of the specified array, Use the current array element value to reference the element of the array currently being considered. Can use most Comparative based Value Syntax to retrieve this value." />
  </method>
  <method name="IS TRUE FOR ANY" description="Whether the specified condition evaluates to true for any value in the specified array.">
    <parameter name="Array" description="The array whose values will be considered. Can use most Array Based Value Syntax to retrieve this value." />
    <parameter name="Condition" description="The condition that is evaluated for each element of the specified array, Use the current array element value to reference the element of the array currently being considered. Can use most Comparative based Value Syntax to retrieve this value." />
  </method>
  <method name="IS USING ABILITY 1" description="Whether the specified player is using ability 1.">
    <parameter name="Player" description="The player whose ability 1 usage to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS USING ABILITY 2" description="Whether the specified player is using ability 2.">
    <parameter name="Player" description="The player whose ability 2 usage to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS USING ULTIMATE" description="Whether the specified player is using an ultimate ability.">
    <parameter name="Player" description="The player whose ultimate ability usage to check. Can use most player based Value Syntax to retrieve this value." />
  </method>
  <method name="IS WAITING FOR PLAYERS" description="Whether the match is waiting for players to join before starting." />
  <method name="LAST CREATED ENTITY" description="A reference to the last effect or icon entity created by the event player (or created at the global level)." />
  <method name="LAST DAMAGE OVER TIME ID" description="An ID representing the most recent damage over time action that was executed by the event player (or executed at the global level)." />
  <method name="LAST HEAL OVER TIME ID" description="An ID representing the most recent heal over time action that was executed by the event player (or executed at the global level)." />
  <method name="LAST OF" description="The value at the end of the specified array. Results in a 0 if the specified array is empty.">
    <parameter name="Array" description="The array from which the value is created. Can use most Array based Value Syntax to provide this data." />
  </method>
  <method name="LAST TEXT ID" description="A reference to the last piece of text created by the event player (or created at the global level) via the create HUD text or create in-world text action." />
  <method name="LEFT" description="Shorthand for the directional vector(1, 0, 0), which points to the left." />
  <method name="LOCAL VECTOR OF" description="The vector in local coordinates corresponding to the provided vector in world coordinates.">
    <parameter name="World Vector" description="The vector in world coordinates that will be converted to local coordinates. Can use most Vector based Value Syntax to provide this data." />
    <parameter name="Relative player" description="The player to whom the resulting vector will be relative. Can use most Player based Value Syntax to provide this data." />
    <parameter name="Transformation" description="Specifies whether the vector should receive a rotation and a translation (usually applied to positions) or only a rotation (usually applied to directions and velocities). You can choose from Rotation or Rotation and Translation. Rotation is that the resulting vector will be rotated to the new frame of reference. Use this option when the provided vector is in a direction or velocity. Rotation and translation is that the resulting vector will be rotated and translated to the new frame of reference. Use this option when the provided vector is a position." />
  </method>
  <method name="MATCH ROUND" description="The current round of the match, counting up from 1. This will return a numerical value" />
  <method name="MATCH TIME" description="The amount of time in seconds remaining in the current game mode phase. This will return a numerical value." />
  <method name="MAX" description="The greater of the two numbers. This will return a numerical value of two number values compared.">
    <parameter name="Value" description="The left-hand operand. May be any value that results in a number. Can use any Number based Value syntax to compare with." />
    <parameter name="Value" description="The right-hand operand. May be any value that results in a number. Can use any Number based Value syntax to compare with." />
  </method>
  <method name="MAX HEALTH" description="The max health of a player, including armor and shields.">
    <parameter name="Player" description="The player whose max health to compare. Can use any Player based Value syntax to provide with." />
  </method>
  <method name="MIN" description="The lesser of the two numbers. This will return a numerical value of two number values compared.">
    <parameter name="Value" description="The left-hand operand. May be any value that results in a number. Can use any Number based Value syntax to compare with." />
    <parameter name="Value" description="The right-hand operand. May be any value that results in a number. Can use any Number based Value syntax to compare with." />
  </method>
  <method name="MODULO" description="The remainder of the left-hand operand divided by the right-hand operand. Any number modulo zero will result in zero. This will return a numerical value of two number values compared. For example 7 divided by 2 will result in 1 for the Modulo.">
    <parameter name="Value" description="The left-hand operand. May be any value that results in a number. Can use any Number based Value syntax." />
    <parameter name="Value" description="The right-hand operand. May be any value that results in a number. Can use any Number based Value syntax." />
  </method>
  <method name="MULTIPLY" description="The product of two numbers or vectors. A vector multiplied by a number will yield a scaled vector.">
    <parameter name="Value" description="The left-hand operand. May be any value that results in a number or a vector. Can use any Number based or Vector based Value syntax to multiply with." />
    <parameter name="Value" description="The left-hand operand. May be any value that results in a number or a vector. Can use any Number based or Vector based Value syntax to multiply with." />
  </method>
  <method name="NEAREST WALKABLE POSITION" description="The position closest to the specified position that can be stood on and is accessible from a spawn point.">
    <parameter name="Position" description="The position from which to search for the nearest walkable position. Can use any Vector based Value syntax to divide with." />
  </method>
  <method name="NORMALIZE" description="The unit-length normalization of a vector.">
    <parameter name="Vector" description="The vector to normalize. Can use any Vector based Value syntax to divide with." />
  </method>
  <method name="NOT" description="Whether the input is false (or the equivalent to false)">
    <parameter name="Value" description="When this input is false (or equivalent to false), then the not value is true. Otherwise, the not value is false. Can use most Boolean-based Value Syntax to provide this value." />
  </method>
  <method name="NULL" description="The absence of a player, used when no player is desired for a particular input, equivalent to the real number 0 for the purposes of comparison and debugging." />
  <method name="NUMBER" description="A real number constant.">
    <parameter name="Number" description="A real number constant. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="NUMBER OF DEAD PLAYERS" description="The number of dead players on a team or in the match.">
    <parameter name="Team" description="The team or teams on which to count players. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="NUMBER OF DEATHS" description="The number of deaths a specific player has earned. This value only accumulates while a game is in progress.">
    <parameter name="Player" description="The player whose death count to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="NUMBER OF ELIMINATIONS" description="The number of eliminations a specific player has earned. This value only accumulates while a game is in progress.">
    <parameter name="Player" description="The player whose elimination count to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="NUMBER OF FINAL BLOWS" description="The number of final blows a specific player has earned. This value only accumulates while a game is in progress.">
    <parameter name="Player" description="The player whose final blow count to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="NUMBER OF HEROES" description="The number of players playing a specific hero on a team or in the match.">
    <parameter name="Hero" description="The hero to check for play. Can use most Hero based Value Syntax to provide this value." />
    <parameter name="Team" description="The team or teams on which to check for the hero being played. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="NUMBER OF LIVING PLAYERS" description="The number of living players on a team or in the match.">
    <parameter name="Team" description="The team or teams on which to count players. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="NUMBER OF PLAYERS" description="The number of players on a team or in the match.">
    <parameter name="Team" description="The team or teams on which to count players. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="NUMBER OF PLAYERS ON OBJECTIVE" description="The number of players occupying a payload or a control point (either on a team or in the match).">
    <parameter name="Team" description="The team or teams on which to count players. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="OBJECTIVE INDEX" description="The control point, payload checkpoint, or payload destination currently active (either 0, 1, or 2). Valid in Assault, Assault/Escort (Hybrid), Escort, and Control." />
  <method name="OBJECTIVE POSITION" description="The position in the world of the specified objective (either a control point, a payload checkpoint, or a payload destination) Valid in Assault, Assault/Escort (Hybrid), Escort, and Control.">
    <parameter name="Number" description="The index of the objective to consider, starting at 0 and counting up. Each control point, payload checkpoint, and payload destination as its own index. Can use most Number based Value Syntax to provide this value, but must output in a integer of 0, 1, or 2." />
  </method>
  <method name="OPPOSITE TEAM OF" description="The team opposite the specified team.">
    <parameter name="Team" description="The team whose opposite to acquire. If all, the result will be all. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="OR" description="Whether either of the two inputs are true (or equivalent to true).">
    <parameter name="Value" description="One of the two inputs considered. If either one is true (or equivalent to true), then the OR value is true. Can use most Boolean based Value Syntax to provide this value." />
    <parameter name="Value" description="One of the two inputs considered. If either one is true (or equivalent to true), then the OR value is true. Can use most Boolean based Value Syntax to provide this value." />
  </method>
  <method name="PAYLOAD POSITION" description="The position in the world of the active payload." />
  <method name="PAYLOAD PROGRESS PERCENTAGE" description="The current progress towards the destination for the active payload (expressed as a percentage)." />
  <method name="PLAYER CARRYING FLAG" description="The player carrying a particular team’s flag in capture the flag. Results in null if no player is carrying the flag.">
    <parameter name="Team" description="The team whose whose flag to check. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="PLAYER CLOSEST TO RETICLE" description="The player closest to the reticle of the specified player, optionally restricted by team.">
    <parameter name="Player" description="The player from whose reticle to search for the closest player. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Team" description="The team or teams on which to search for the closest player. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="PLAYER VARIABLE" description="The current value of a player variable, which is a variable that belongs to a specific player.">
    <parameter name="Player" description="The player whose variable to acquire. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Variable" description="Variable specified by a single alphabetic letter (A through Z)." />
  </method>
  <method name="PLAYERS IN SLOT" description="The player or array of players who occupy a specific slot in the game.">
    <parameter name="Slot" description="The slot number from each to acquire a player or players. In team games, each team has slots 0 through 5. In free-for-all games, slots are numbered 0 through 11. Can use most Number based Value Syntax to provide this value." />
    <parameter name="Team" description="The team or teams from which to acquire a player or players. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="PLAYERS IN VIEW ANGLE" description="The players who are within a specific view angle of a specific player’s reticle, optionally restricted by team.">
    <parameter name="Player" description="The player whose view to use for the check. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Team" description="The team or teams on which to consider players. Can use most Team based Value Syntax to provide this value." />
    <parameter name="View Angle" description="The view angle to compare against in degrees. Can use most Angle based Value Syntax to provide this value." />
  </method>
  <method name="PLAYERS ON HERO" description="The array of players playing a specific hero on a team or in the match.">
    <parameter name="Hero" description="The hero to check for play. Can use most Hero based Value Syntax to provide this value." />
    <parameter name="Team" description="The team or teams on which to check for the hero being played. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="PLAYERS WITHIN RADIUS" description="An array containing all players within a certain distance of a position, optionally restricted by team and line of sight.">
    <parameter name="Center" description="The center position from which to measure distance. Can use most Vector based Value Syntax to provide this value." />
    <parameter name="Radius" description="The radius in meters inside which players must be in order to be included in the resulting array. Can use most Number based Value Syntax to provide this value." />
    <parameter name="Team" description="The team or teams to which a player must belong to be included in the resulting array. Can use most Team based Value Syntax to provide this value." />
    <parameter name="LOS Check" description="Specifies whether and how a player must pass a line-of-sight check to be included in the resulting array. You can choose from Off, Surfaces, Surfaces and Enemy Barriers, and Surfaces and All Barriers. Off will result in the line of sight is never blocked, allowing results through walls. Surfaces will result in line of sight is blocked by ceilings, walls, floors, platforms, and any fixed object that blocks projectiles. Surfaces and Enemy Barriers will result in line of sight is blocked by ceilings, walls, floors, platforms, any fixed object that blocks projectiles, and barriers created by the enemy team. Surfaces and All Barriers will result in line of sight is blocked by ceilings, walls, floors, platforms, any fixed object that blocks projectiles, and all barriers." />
  </method>
  <method name="POINT CAPTURE PERCENTAGE" description="The current progress towards capture for the active control point (expressed as a percentage)." />
  <method name="POSITION OF" description="The current position of a player as a vector.">
    <parameter name="Player" description="The player whose position to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="RAISE TO POWER" description="The left-hand operand raised to the power of the right-hand operand. For example 2 ^ 3 = 8">
    <parameter name="Value" description="The left-hand operand. May be any value that results in a number. Can use most Number based Value Syntax to provide this value." />
    <parameter name="Value" description="The right-hand operand. May be any value that results in a number. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="RANDOM INTEGER" description="A random integer between the specified min and max, inclusive.">
    <parameter name="MIN" description="The smallest integer allowed. If a real number is provided to this input, it is rounded to the nearest integer. Can use most Number based Value Syntax to provide this value." />
    <parameter name="MAX" description="The largest integer allowed. If a real number is provided to this input, it is rounded to the nearest integer. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="RANDOM REAL" description="A random real number between the specified min and max.">
    <parameter name="MIN" description="The smallest real number allowed. Can use most Number based Value Syntax to provide this value." />
    <parameter name="MAX" description="The largest real number allowed. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="RANDOM VALUE IN ARRAY" description="A random value from the specified array.">
    <parameter name="Array" description="The array from which to randomly take a value. If a non-array value is provided, the result is simply the provided value. Can use most Array based Value Syntax to provide this value." />
  </method>
  <method name="RANDOMIZED ARRAY" description="A copy of the specified array with the values in a random order">
    <parameter name="Array" description="The array whose copy will be randomized. Can use most Array based Value Syntax to provide this value." />
  </method>
  <method name="RAY CAST HIT NORMAL" description="The surface normal at the ray cast hit position (or from end pos to start pos if no hit occurs).">
    <parameter name="Start POS" description="The start position for the ray cast. If a player is provided. A position 2 meters above the player’s feet is used. Can use most Vector based Value Syntax to provide this value." />
    <parameter name="End POS" description="The end position for the ray cast. If a player is provided. A position 2 meters above the player’s feet is used. Can use most Vector based Value Syntax to provide this value." />
    <parameter name="Players to include" description="Which players can be hit by this ray cast. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Players to exclude" description="Which players cannot be hit by this ray cast. This list takes precedence over players to include. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Include player owned objects" description="Whether player owned objects (such as barriers or turrets) should be included in the ray cast. Can use most Boolean based Value Syntax to provide this value." />
  </method>
  <method name="RAY CAST HIT PLAYER" description="The player hit by the ray cast (or null if no player is hit).">
    <parameter name="Start POS" description="The start position for the ray cast. If a player is provided. A position 2 meters above the player’s feet is used. Can use most Vector based Value Syntax to provide this value." />
    <parameter name="End POS" description="The end position for the ray cast. If a player is provided. A position 2 meters above the player’s feet is used. Can use most Vector based Value Syntax to provide this value." />
    <parameter name="Players to include" description="Which players can be hit by this ray cast. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Players to exclude" description="Which players cannot be hit by this ray cast. This list takes precedence over players to include. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Include player owned objects" description="Whether player owned objects (such as barriers or turrets) should be included in the ray cast. Can use most Boolean based Value Syntax to provide this value." />
  </method>
  <method name="RAY CAST HIT POSITION" description="The position where the ray cast hits a surface, object, or player (or the end POS if no hit occurs).">
    <parameter name="Start POS" description="The start position for the ray cast. If a player is provided. A position 2 meters above the player’s feet is used. Can use most Vector based Value Syntax to provide this value." />
    <parameter name="End POS" description="The end position for the ray cast. If a player is provided. A position 2 meters above the player’s feet is used. Can use most Vector based Value Syntax to provide this value." />
    <parameter name="Players to include" description="Which players can be hit by this ray cast. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Players to exclude" description="Which players cannot be hit by this ray cast. This list takes precedence over players to include. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Include player owned objects" description="Whether player owned objects (such as barriers or turrets) should be included in the ray cast. Can use most Boolean based Value Syntax to provide this value." />
  </method>
  <method name="REMOVE FROM ARRAY" description="A copy of an array with one or more values removed (if found).">
    <parameter name="Array" description="The array from which to remove values. Can use most Array based Value Syntax to provide this value." />
    <parameter name="Value" description="The value to remove from the array (if found), if this value itself an array, each matching element is removed. Can use most Array based or Number based Value Syntax to provide this value." />
  </method>
  <method name="RIGHT" description="Shorthand for the directional vector (-1, 0, 0), which points to the right." />
  <method name="ROUND TO INTEGER" description="The integer to which the specified value rounds.">
    <parameter name="Value" description="The real number to round. Can use most Number based Value Syntax to provide this value." />
    <parameter name="Rounding Type" description="Determines the direction in which the value will be rounded. You can round up, down, or to the nearest integer." />
  </method>
  <method name="SCORE OF" description="The current score of a player. Results in 0 if the game mode is not free-for-all.">
    <parameter name="Player" description="The player whose score to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="SINE FROM DEGREES" description="Sine of the specified angle in degrees. The sine is the ratio of the length of the side that is opposite  that angle to the length of the longest side of the triangle (the hypotenuse).">
    <parameter name="Angle" description="Angle in degrees. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="SINE FROM RADIANS" description="Sine of the specified angle in radians. The sine is the ratio of the length of the side that is opposite  that angle to the length of the longest side of the triangle (the hypotenuse). A radian is a unit of angle, equal to an angle at the center of a circle whose arc is equal in length to the radius.">
    <parameter name="Angle" description="Angle in radians. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="SLOT OF" description="The slot number of the specified player. In team games, each team has slots 0 through 5. In free-for-all games, slots are numbers 0 through 11.">
    <parameter name="Player" description="The player whose slot number to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="SORTED ARRAY" description="A copy of the specified array with the values sorted according to the value rank that is evaluated for each element.">
    <parameter name="Array" description="The array whose copy will be sorted. Can use most Array based Value Syntax to provide this value." />
    <parameter name="Value Rank" description="The value that is evaluated for each element of the copied array. The array is sorted by this rank in ascending order. Use the current array element value to reference the element of the array currently being considered. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="SPEED OF" description="The current speed of a player in meters per second.">
    <parameter name="Player" description="The player whose speed to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="SPEED OF IN DIRECTION" description="The current speed of a player in a specific direction in meters per second.">
    <parameter name="Player" description="The player whose speed to acquire. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Direction" description="The direction of travel in which to measure the player’s speed. Can use most Vector based Value Syntax to provide this value." />
  </method>
  <method name="SQUARE ROOT" description="The square root of the specified value. For example the square root of 9 is 3.">
    <parameter name="Value" description="The real number value whose square root will be computed. Negative values result in zero. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="STRING" description="Text formed from a selection of strings and specified values.">
    <parameter name="String" description="How the string will be structured using a series of text and phrases." />
    <parameter name="{0}" description="The first value in the string." />
    <parameter name="{1}" description="The second value in the string." />
    <parameter name="{2}" description="The third value in the string." />
  </method>
  <method name="SUBTRACT" description="The difference between two numbers or vectors.">
    <parameter name="Value" description="The left-hand operand. May be any value that results in a number or a vector. Can use most Number based Value Syntax to provide this value." />
    <parameter name="Value" description="The right-hand operand. May be any value that results in a number or a vector. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="TEAM" description="A team constant. The all option represents both teams in a team or all players in a free-for-all game.">
    <parameter name="Team" description="Specifies which team the value outputs to. This can be set to All, Team 1, or Team 2." />
  </method>
  <method name="TEAM OF" description="The team of a player. If the game mode is free-for-all, the team is considered to be all.">
    <parameter name="Player" description="The player whose team to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="TEAM SCORE" description="The current score for the specified team. Results in a 0 in free-for-all game modes.">
    <parameter name="Team" description="The team whose score to acquire. Can use most Team based Value Syntax to provide this value." />
  </method>
  <method name="THROTTLE OF" description="The directional input of a player, represented by a vector with a horizontal input on the X component (positive to the left) and vertical input on the Z component (positive upward).">
    <parameter name="Player" description="The player whose directional input to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="TRUE" description="The Boolean value of true." />
  <method name="ULTIMATE CHARGE PERCENT" description="The current ultimate ability charge percentage of a player.">
    <parameter name="Player" description="The player whose ultimate charge percentage to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="UP" description="Shorthand for the directional vector(0, 1, 0). Which points upward." />
  <method name="VALUE IN ARRAY" description="The value found at a specific element of an array. Results in a 0 if the element does not exist.">
    <parameter name="Array" description="The array whose element to acquire. Can use most Array based Value Syntax to provide this value." />
    <parameter name="Index" description="The index whose element to acquire. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="VECTOR" description="A vector composed of three real numbers (X, Y, Z) where X is left, Y is Up, and Z is forward. Vectors are used for position, direction, and velocity.">
    <parameter name="X" description="The X value of the Vector. Can use most Number based Value Syntax to provide this value." />
    <parameter name="Y" description="The Y value of the vector. Can use most Number based Value Syntax to provide this value." />
    <parameter name="Z" description="The Z value of the Vector. Can use most Number based Value Syntax to provide this value." />
  </method>
  <method name="VECTOR TOWARDS" description="The displacement vector from one position to another.">
    <parameter name="Start Pos" description="The start position for the line of sight check. Most positional based Value Syntax can be used here." />
    <parameter name="End Pos" description="The end position for the line of sight check. Most positional based Value Syntax can be used here." />
  </method>
  <method name="VELOCITY OF" description="The current velocity of a player as a vector. If the player is on a surface, the Y component of this velocity will be 0m even when traveling up or down a slope.">
    <parameter name="Player" description="The player whose velocity to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="VERTICAL ANGLE FROM DIRECTION" description="The vertical angle in degrees corresponding to the specified direction vector.">
    <parameter name="Direction" description="The direction vector from which to acquire a vertical angle in degrees. The vector is unitized before calculations begins. Can use most Vector based Value Syntax to provide this value." />
  </method>
  <method name="VERTICAL ANGLE TOWARDS" description="The vertical angle in degrees from a player’s current forward direction to the specified position. The result is positive if the position is below the player. Otherwise, the result is zero or negative.">
    <parameter name="Position" description="The player whose current facing the angle begins. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Position" description="The direction vector from which to acquire a vertical angle in degrees. The vector is unitized before calculations begins. Can use most Vector based Value Syntax to provide this value." />
  </method>
  <method name="VERTICAL FACING ANGLE OF" description="The vertical angle in degrees, of a player’s current facing relative to the world. This value increases as the player looks down.">
    <parameter name="Player" description="The player whose vertical facing angle to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="VERTICAL SPEED OF" description="The current vertical speed of a player in meters per second. This measurement excludes all horizontal motion, including motion while traveling up and down slopes.">
    <parameter name="Player" description="The player whose vertical speed to acquire. Can use most Player based Value Syntax to provide this value." />
  </method>
  <method name="VICTIM" description="The player that received damage for the event currently being processed by this rule. May be the same as the attacker or the event player." />
  <method name="WORLD VECTOR OF" description="The vector in the world coordinates corresponding to the provided vector in local coordinates.">
    <parameter name="Local vector" description="The vector in local coordinates that will be converted to world coordinates. Can use most Vector based Value Syntax to provide this value." />
    <parameter name="Relative Player" description="The player to whom the local vector is relative. Can use most Player based Value Syntax to provide this value." />
    <parameter name="Local vector" description="Specifies whether the vector should receive a rotation and a translation (usually applied to positions) or only a rotation (usually applied to directions and velocities). Can select rotation or rotation and translation." />
  </method>
  <method name="X COMPONENT OF" description="The X Component of the specified Vector, usually representing a leftward amount.">
    <parameter name="Value" description="The vector from which to acquire the X component. Can use most Vector based Value Syntax to provide this value." />
  </method>
  <method name="Y COMPONENT OF" description="The Y Component of the specified Vector, usually representing a upward amount.">
    <parameter name="Value" description="The vector from which to acquire the Y component. Can use most Vector based Value Syntax to provide this value." />
  </method>
  <method name="Z COMPONENT OF" description="The Z Component of the specified Vector, usually representing a forward amount.">
    <parameter name="Value" description="The vector from which to acquire the Z component. Can use most Vector based Value Syntax to provide this value." />
  </method>
</Wiki>